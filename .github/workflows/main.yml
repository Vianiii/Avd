name: avd-andr11-magisk-rooted

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Session duration in hours (max 6)'
        required: false
        default: '6'

jobs:
  run-emulator:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Enable KVM Hardware Acceleration
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Free Up Disk Space
        run: |
          echo "🗑️ Freeing up disk space..."
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/share/boost
          sudo docker image prune --all --force
          sudo apt-get clean
          df -h

      - name: Download & Install rootAVD
        run: |
          echo "📥 Downloading rootAVD..."
          wget -q https://gitlab.com/newbit/rootAVD/-/archive/master/rootAVD-master.tar.gz
          tar -xzf rootAVD-master.tar.gz
          chmod +x rootAVD-master/rootAVD.sh
          echo "✅ rootAVD ready"

      - name: Download Magisk APK
        run: |
          echo "📥 Downloading Magisk..."
          MAGISK_VER="27.0"
          wget -q "https://github.com/topjohnwu/Magisk/releases/download/v${MAGISK_VER}/Magisk-v${MAGISK_VER}.apk" -O Magisk.apk
          if [ -f "Magisk.apk" ]; then
            echo "✅ Magisk v${MAGISK_VER} downloaded"
            ls -lh Magisk.apk
          fi

      - name: Install FRP Client v0.58.1
        run: |
          echo "📥 Downloading FRP..."
          wget -q https://github.com/fatedier/frp/releases/download/v0.58.1/frp_0.58.1_linux_amd64.tar.gz
          tar -xzf frp_0.58.1_linux_amd64.tar.gz
          sudo cp frp_0.58.1_linux_amd64/frpc /usr/local/bin/
          sudo chmod +x /usr/local/bin/frpc
          rm -rf frp_0.58.1_linux_amd64*
          echo "✅ FRP installed"

      - name: Create FRP Client Configuration with KCP
        run: |
          cat > frpc.toml << 'EOF'
          serverAddr = "159.195.6.61"
          serverPort = 7000
          transport.protocol = "kcp"
          
          [[proxies]]
          name = "github-avd-adb"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5555
          remotePort = 5555
          
          [[proxies]]
          name = "github-avd-console"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5554
          remotePort = 5554
          EOF
          echo "✅ FRP config created"

      - name: AVD Cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-30-magisk-rooted-v5

      - name: Prepare Rooting Script
        run: |
          cat > root_avd.sh << 'EOFSCRIPT'
          #!/bin/bash
          set -e
          
          echo "========================================="
          echo "   🔓 MAGISK ROOTING PROCESS"
          echo "========================================="
          echo ""
          
          echo "✅ AVD booted successfully"
          adb devices
          echo ""
          
          echo "📦 Installing Magisk APK..."
          adb install Magisk.apk
          echo "✅ Magisk APK installed"
          sleep 5
          echo ""
          
          echo "🔍 Locating ramdisk.img..."
          RAMDISK_PATH="$ANDROID_HOME/system-images/android-30/google_apis/x86_64/ramdisk.img"
          
          if [ -f "$RAMDISK_PATH" ]; then
            echo "✅ Found ramdisk at: $RAMDISK_PATH"
            echo ""
            
            echo "🔓 Stopping emulator for patching..."
            adb emu kill
            sleep 8
            
            echo "🔧 Running rootAVD to patch system..."
            cd rootAVD-master
            ./rootAVD.sh "$RAMDISK_PATH"
            cd ..
            
            echo ""
            echo "✅ Magisk patching completed successfully!"
            echo "========================================="
          else
            echo "❌ ERROR: Ramdisk not found at expected path"
            echo "Searching for ramdisk..."
            find "$ANDROID_HOME/system-images" -name "ramdisk.img" || true
            exit 1
          fi
          EOFSCRIPT
          
          chmod +x root_avd.sh
          echo "✅ Rooting script prepared"

      - name: Create AVD and Root with Magisk
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          avd-name: test-avd-30
          profile: pixel_6_pro
          ram-size: 6144M
          heap-size: 1024M
          disk-size: 12288M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none -writable-system
          disable-animations: true
          script: ./root_avd.sh

      - name: Start FRP KCP Tunnel
        run: |
          echo "🚀 Starting FRP with KCP protocol..."
          nohup frpc -c frpc.toml > frpc.log 2>&1 &
          sleep 5
          if pgrep -x "frpc" > /dev/null; then
            echo "✅ FRP tunnel started successfully"
            cat frpc.log
          else
            echo "❌ FRP failed to start"
            cat frpc.log
          fi

      - name: Create Verification Script
        run: |
          cat > verify.sh << 'VERIFYSCRIPT'
          #!/bin/bash
          
          echo ""
          echo "🔐 Verifying Magisk Installation..."
          
          MAGISK_INSTALLED=0
          if adb shell pm list packages | grep -q "com.topjohnwu.magisk"; then
            echo "   ✅ Magisk App: Installed"
            adb shell pm list packages | grep magisk
            MAGISK_INSTALLED=1
          else
            echo "   ⚠️  Magisk App: Not detected"
          fi
          
          echo ""
          echo "🔓 Testing Root Access..."
          
          ROOT_WORKING=0
          ROOT_TEST=$(adb shell su -c "whoami" 2>&1 || true)
          if echo "$ROOT_TEST" | grep -q "root"; then
            echo "   ✅ Root Access: WORKING"
            adb shell su -c "id"
            ROOT_WORKING=1
          else
            echo "   ⏳ Root Access: Pending (grant on first use)"
            echo "   Response: $ROOT_TEST"
          fi
          
          echo ""
          return 0
          VERIFYSCRIPT
          
          chmod +x verify.sh

      - name: Create Monitoring Script
        run: |
          cat > monitor.sh << 'MONITORSCRIPT'
          #!/bin/bash
          DURATION_HOURS=$1
          DURATION_SECONDS=$((3600 * DURATION_HOURS))
          START_TIME=$(date +%s)
          
          echo ""
          echo "========================================="
          echo "   ⏱️  SESSION MONITORING"
          echo "========================================="
          echo "Duration: ${DURATION_HOURS} hours"
          echo "Started: $(date)"
          echo "Protocol: KCP (UDP - Low Latency)"
          echo "Root: Magisk Framework"
          echo "GameGuardian: Compatible"
          echo "RAM: 6GB | Storage: 12GB"
          echo "Android: 11 (API 30)"
          echo "========================================="
          echo ""
          
          ITERATION=0
          while true; do
            CURRENT_TIME=$(date +%s)
            ELAPSED=$((CURRENT_TIME - START_TIME))
            
            if [ $ELAPSED -ge $DURATION_SECONDS ]; then
              echo ""
              echo "✅ Session completed after ${DURATION_HOURS} hours"
              break
            fi
            
            REMAINING=$((DURATION_SECONDS - ELAPSED))
            HOURS=$((REMAINING / 3600))
            MINUTES=$(((REMAINING % 3600) / 60))
            
            ITERATION=$((ITERATION + 1))
            
            if [ $((ITERATION % 60)) -eq 0 ]; then
              DEVICES=$(adb devices | grep -c "5555.*device" || echo "0")
              
              FRP_STATUS="✅"
              pgrep -x "frpc" > /dev/null || FRP_STATUS="❌"
              
              MAGISK_STATUS="⏳"
              ROOT_CHECK=$(adb shell su -c "whoami" 2>&1 || true)
              if echo "$ROOT_CHECK" | grep -q "root"; then
                MAGISK_STATUS="✅"
              fi
              
              echo "[$(date '+%H:%M:%S')] Time Left: ${HOURS}h ${MINUTES}m | Devices: ${DEVICES} | FRP: ${FRP_STATUS} | Root: ${MAGISK_STATUS}"
            fi
            
            sleep 1
          done
          MONITORSCRIPT
          
          chmod +x monitor.sh
          echo "✅ Monitor script created"

      - name: Start Magisk Rooted Emulator - Production Mode
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          avd-name: test-avd-30
          profile: pixel_6_pro
          ram-size: 6144M
          heap-size: 1024M
          disk-size: 12288M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none -memory 6144 -cores 4 -writable-system
          disable-animations: true
          script: |
            echo ""
            echo "========================================="
            echo "   🚀 MAGISK ROOTED ANDROID 11"
            echo "   🎮 GAMEGUARDIAN READY"
            echo "========================================="
            echo ""
            adb wait-for-device
            sleep 20
            echo "📱 Enabling ADB over TCP/IP..."
            adb tcpip 5555
            sleep 5
            adb connect 127.0.0.1:5555
            sleep 3
            echo ""
            echo "========================================="
            echo "   📱 DEVICE SPECIFICATIONS"
            echo "========================================="
            echo "Android Version: 11 (API 30)"
            echo "RAM: 6GB"
            echo "Storage: 12GB"
            echo "CPU: 4 cores (x86_64)"
            echo "GPU: SwiftShader (Software Rendering)"
            echo "System: Writable"
            echo ""
            ./verify.sh
            echo ""
            echo "💾 Storage Status:"
            adb shell df -h /data | grep -v Filesystem | head -1
            echo ""
            echo "🧠 Memory Status:"
            adb shell cat /proc/meminfo | grep MemTotal
            echo ""
            echo "========================================="
            echo "   🌐 CONNECTION INFORMATION"
            echo "========================================="
            echo ""
            echo "📱 Connect via ADB:"
            echo "   adb connect 159.195.6.61:5555"
            echo "   adb devices"
            echo "   adb shell"
            echo ""
            echo "🔓 Test Root:"
            echo "   adb shell su -c 'whoami'"
            echo "   adb shell su -c 'id'"
            echo ""
            echo "🎮 Install GameGuardian:"
            echo "   1. Download GameGuardian APK to PC"
            echo "   2. adb connect 159.195.6.61:5555"
            echo "   3. adb install GameGuardian.apk"
            echo "   4. Open Magisk app on device"
            echo "   5. Grant root to GameGuardian"
            echo "   6. Launch GameGuardian"
            echo ""
            echo "📦 Install Apps via ADB:"
            echo "   adb install -r app.apk"
            echo "   adb install -g app.apk"
            echo ""
            echo "🔧 Useful Commands:"
            echo "   adb shell pm list packages"
            echo "   adb logcat"
            echo "   adb shell dumpsys activity"
            echo ""
            echo "========================================="
            echo "VPS Address: 159.195.6.61:5555"
            echo "Protocol: KCP (UDP) - Low Latency"
            echo "Android: 11 | Root: Magisk | GG: Ready"
            echo "========================================="
            echo ""
            ./monitor.sh ${{ github.event.inputs.duration }}

      - name: Upload Logs and Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: magisk-rooted-avd-logs-${{ github.run_number }}
          path: |
            frpc.log
            frpc.toml
            rootAVD-master/*.log
          retention-days: 7
