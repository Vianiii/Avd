nname: avd-rooted-gameguardian

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Session duration in hours (max 6)'
        required: false
        default: '6'

jobs:
  run-emulator:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Free Up Space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force

      - name: Install FRP
        run: |
          wget -q https://github.com/fatedier/frp/releases/download/v0.58.1/frp_0.58.1_linux_amd64.tar.gz
          tar -xzf frp_0.58.1_linux_amd64.tar.gz
          sudo cp frp_0.58.1_linux_amd64/frpc /usr/local/bin/
          sudo chmod +x /usr/local/bin/frpc

      - name: Create FRP Config
        run: |
          cat > frpc.toml << 'EOF'
          serverAddr = "159.195.6.61"
          serverPort = 7000
          transport.protocol = "kcp"
          
          [[proxies]]
          name = "adb"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5555
          remotePort = 5555
          EOF

      - name: Start FRP
        run: |
          nohup frpc -c frpc.toml > frpc.log 2>&1 &
          sleep 3
          pgrep -x "frpc" && echo "‚úÖ FRP started" || echo "‚ö†Ô∏è FRP may have issues"

      - name: Create SU Binary Script
        run: |
          cat > su_binary.sh << 'SUEOF'
          #!/system/bin/sh
          case "$1" in
            -c)
              shift
              exec sh -c "$@"
              ;;
            -v|--version)
              echo "su binary v1.0 (custom)"
              ;;
            *)
              exec sh
              ;;
          esac
          SUEOF
          chmod +x su_binary.sh

      - name: Create Root Installation Script
        run: |
          cat > install_root.sh << 'ENDSCRIPT'
          #!/bin/bash
          set -e
          
          echo "========================================="
          echo "Installing Root Access"
          echo "========================================="
          
          adb root || true
          sleep 3
          adb wait-for-device
          adb remount || true
          sleep 2
          
          echo "Creating su binary..."
          adb shell "mkdir -p /system/xbin"
          adb shell "mkdir -p /system/bin"
          
          adb push su_binary.sh /system/xbin/su
          adb shell "chmod 06755 /system/xbin/su"
          
          adb shell "cp /system/xbin/su /system/bin/su"
          adb shell "chmod 06755 /system/bin/su"
          
          adb shell "mkdir -p /su/bin" || true
          adb shell "ln -sf /system/xbin/su /su/bin/su" || true
          
          echo "Verifying su installation..."
          adb shell "ls -l /system/xbin/su"
          adb shell "ls -l /system/bin/su"
          
          echo "‚úÖ Root access installed"
          echo "========================================="
          ENDSCRIPT
          
          chmod +x install_root.sh

      - name: Create Monitor Script
        run: |
          cat > monitor.sh << 'ENDMONITOR'
          #!/bin/bash
          HOURS=$1
          SECONDS=$((3600 * HOURS))
          START=$(date +%s)
          
          echo ""
          echo "========================================="
          echo "Session: ${HOURS}h | Started: $(date)"
          echo "VPS: 159.195.6.61:5555 (KCP)"
          echo "========================================="
          echo ""
          
          ITER=0
          while true; do
            NOW=$(date +%s)
            ELAPSED=$((NOW - START))
            
            if [ $ELAPSED -ge $SECONDS ]; then
              echo ""
              echo "‚úÖ Session completed"
              break
            fi
            
            REMAIN=$((SECONDS - ELAPSED))
            H=$((REMAIN / 3600))
            M=$(((REMAIN % 3600) / 60))
            
            ITER=$((ITER + 1))
            
            if [ $((ITER % 60)) -eq 0 ]; then
              DEVS=$(adb devices 2>/dev/null | grep -c "device$" || echo "0")
              FRP=$(pgrep -x "frpc" > /dev/null && echo "‚úÖ" || echo "‚ùå")
              echo "[$(date '+%H:%M:%S')] ${H}h ${M}m left | Devices: ${DEVS} | FRP: ${FRP}"
            fi
            
            sleep 1
          done
          ENDMONITOR
          
          chmod +x monitor.sh

      - name: Setup Rooted AVD
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: default
          arch: x86_64
          profile: pixel_6_pro
          ram-size: 6144M
          disk-size: 12288M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -writable-system
          disable-animations: true
          force-avd-creation: true
          script: ./install_root.sh

      - name: Run Production Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: default
          arch: x86_64
          profile: pixel_6_pro
          ram-size: 6144M
          disk-size: 12288M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -writable-system -memory 6144 -cores 4
          disable-animations: true
          script: |
            echo ""
            echo "========================================="
            echo "   üöÄ ROOTED ANDROID 11"
            echo "   üéÆ GAMEGUARDIAN READY"
            echo "========================================="
            echo ""
            adb wait-for-device
            sleep 15
            echo "üì± Enabling ADB TCP/IP..."
            adb tcpip 5555
            sleep 5
            adb connect 127.0.0.1:5555
            sleep 3
            echo ""
            echo "üìä Device Info:"
            echo "Android: 11 | RAM: 6GB | Storage: 12GB"
            echo ""
            echo "üîì Root Status:"
            adb shell "which su" || echo "su not in PATH"
            adb shell "ls -l /system/xbin/su" || echo "su not found"
            adb shell "/system/xbin/su -v" || true
            echo ""
            echo "========================================="
            echo "üì± Connect: adb connect 159.195.6.61:5555"
            echo "üéÆ Install GG: adb install GameGuardian.apk"
            echo "========================================="
            echo ""
            ./monitor.sh ${{ github.event.inputs.duration }}

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ github.run_number }}
          path: frpc.log
          retention-days: 7
