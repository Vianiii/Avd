name: avd-lineageos-prerooted

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Session hours (max 6)'
        required: false
        default: '6'

jobs:
  run-emulator:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Free Up Space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /opt/hostedtoolcache/CodeQL /usr/local/share/boost
          sudo docker image prune --all --force
          df -h

      - name: Install System Requirements
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils cpu-checker

      - name: Download Pre-Rooted Android x86 Image
        run: |
          echo "📥 Downloading Android x86 with root and browser..."
          # Using Android-x86 which has root by default
          wget -q "https://sourceforge.net/projects/android-x86/files/Release%2011.0/android-x86_64-11.0-r4.iso/download" -O android.iso || \
          wget -q "https://osdn.net/projects/android-x86/downloads/73898/android-x86_64-11.0-r4.iso" -O android.iso
          
          echo "✅ Pre-rooted Android downloaded"
          ls -lh android.iso

      - name: Install Chrome Browser APK
        run: |
          echo "📥 Downloading Chrome browser..."
          wget -q "https://dl.google.com/android/repository/sys-img/google_apis/x86_64-30_r11-linux.zip" -O chrome.zip || \
          wget -q "https://github.com/bromite/bromite/releases/latest/download/arm64_ChromePublic.apk" -O Browser.apk
          echo "✅ Browser downloaded"

      - name: Install FRP
        run: |
          wget -q https://github.com/fatedier/frp/releases/download/v0.58.1/frp_0.58.1_linux_amd64.tar.gz
          tar -xzf frp_0.58.1_linux_amd64.tar.gz
          sudo cp frp_0.58.1_linux_amd64/frpc /usr/local/bin/
          sudo chmod +x /usr/local/bin/frpc

      - name: Create FRP Config
        run: |
          cat > frpc.toml << 'EOF'
          serverAddr = "159.195.6.61"
          serverPort = 7000
          transport.protocol = "kcp"
          
          [[proxies]]
          name = "adb"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5555
          remotePort = 5555
          EOF

      - name: Start FRP
        run: |
          nohup frpc -c frpc.toml > frpc.log 2>&1 &
          sleep 3

      - name: Create Monitor
        run: |
          cat > monitor.sh << 'SCRIPT'
          #!/bin/bash
          HOURS=$1
          SECS=$((3600 * HOURS))
          START=$(date +%s)
          
          echo ""
          echo "========================================="
          echo "Session: ${HOURS}h | VPS: 159.195.6.61:5555"
          echo "Root: Built-in (No rooting needed)"
          echo "========================================="
          echo ""
          
          ITER=0
          while true; do
            NOW=$(date +%s)
            ELAPSED=$((NOW - START))
            [ $ELAPSED -ge $SECS ] && echo "✅ Complete" && break
            
            REMAIN=$((SECS - ELAPSED))
            H=$((REMAIN / 3600))
            M=$(((REMAIN % 3600) / 60))
            
            ITER=$((ITER + 1))
            [ $((ITER % 60)) -eq 0 ] && echo "[$(date '+%H:%M:%S')] ${H}h ${M}m left"
            
            sleep 1
          done
          SCRIPT
          chmod +x monitor.sh

      - name: Run Pre-Rooted Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: default
          arch: x86_64
          profile: pixel_6_pro
          ram-size: 6144M
          disk-size: 12288M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -writable-system
          disable-animations: true
          force-avd-creation: true
          script: |
            echo ""
            echo "========================================="
            echo "   🚀 Pre-Rooted Android 11"
            echo "   🌐 Browser Included"
            echo "   🎮 GameGuardian Ready"
            echo "========================================="
            echo ""
            
            adb wait-for-device
            sleep 15
            
            # Enable root via adb
            echo "🔓 Enabling root access..."
            adb root
            sleep 5
            adb wait-for-device
            adb remount
            
            # Install browser if needed
            if [ -f "Browser.apk" ]; then
              echo "📦 Installing browser..."
              adb install Browser.apk || true
            fi
            
            echo "📱 Enabling ADB TCP..."
            adb tcpip 5555
            sleep 5
            adb connect 127.0.0.1:5555
            sleep 3
            
            echo ""
            echo "🔓 Root Status:"
            adb shell whoami
            adb shell id
            
            echo ""
            echo "🌐 Browser Check:"
            adb shell pm list packages | grep -E 'chrome|browser|webview' | head -3
            
            echo ""
            echo "========================================="
            echo "📱 Connect: adb connect 159.195.6.61:5555"
            echo ""
            echo "🌐 Launch Browser:"
            echo "   adb shell am start -a android.intent.action.VIEW -d https://google.com"
            echo ""
            echo "🎮 Install GameGuardian:"
            echo "   adb install GameGuardian.apk"
            echo ""
            echo "✅ AOSP has native root - GameGuardian ready"
            echo "========================================="
            echo ""
            
            ./monitor.sh ${{ github.event.inputs.duration }}

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ github.run_number }}
          path: frpc.log
          retention-days: 7
