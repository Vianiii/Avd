name: android-avd-only-FIXED

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Duration in hours'
        required: true
        default: '6'

jobs:
  android-avd:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules > /dev/null
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          sudo chmod 666 /dev/kvm
          sudo usermod -a -G kvm runner
          echo "✅ KVM enabled"

      - name: Setup Android SDK on /mnt (72GB!)
        run: |
          sudo mkdir -p /mnt/android
          sudo chown $(whoami):$(whoami) /mnt/android
          
          cd /mnt/android
          
          echo "Downloading SDK..."
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q commandlinetools-linux-*
          rm commandlinetools-linux-*.zip
          
          echo "Installing SDK tools..."
          export SDKMANAGER=/mnt/android/cmdline-tools/bin/sdkmanager
          
          echo "" | $SDKMANAGER --sdk_root=/mnt/android --licenses > /dev/null 2>&1 || true
          
          $SDKMANAGER --sdk_root=/mnt/android \
            "platform-tools" \
            "emulator" \
            "system-images;android-34;google_apis;x86_64" \
            > /dev/null 2>&1
          
          echo "✅ Android SDK installed"

      - name: Create Android AVD
        run: |
          export AVDMANAGER=/mnt/android/cmdline-tools/bin/avdmanager
          export ANDROID_HOME=/mnt/android
          export ANDROID_AVD_HOME=/mnt/android/avd
          
          mkdir -p $ANDROID_AVD_HOME
          
          echo "Creating AVD with 60GB storage..."
          echo "no" | $AVDMANAGER create avd \
            -n "Pixel_6" \
            -k "system-images;android-34;google_apis;x86_64" \
            -d "pixel_6" \
            -c 60G 2>&1 | tail -10 || true
          
          echo ""
          echo "✅ AVD created successfully"

      - name: Start Android Emulator (Headless)
        run: |
          export ANDROID_HOME=/mnt/android
          export ANDROID_AVD_HOME=/mnt/android/avd
          
          echo "Starting emulator..."
          /mnt/android/emulator/emulator -avd Pixel_6 \
            -gpu on \
            -no-window \
            -no-snapshot \
            -memory 2048 \
            > /tmp/emulator.log 2>&1 &
          
          sleep 20
          
          # FIX: Use full path to adb
          /mnt/android/platform-tools/adb devices
          echo "✅ Emulator running (headless)"

      - name: Display Info
        run: |
          echo ""
          echo "╔════════════════════════════════════════════╗"
          echo "║  ✅ ANDROID AVD READY!                   ║"
          echo "╚════════════════════════════════════════════╝"
          echo ""
          echo "📱 Emulator: Running (headless)"
          echo "💾 Storage: 60GB"
          echo ""
          df -h /mnt | tail -1
          echo ""
          echo "🔧 Available commands:"
          echo "  /mnt/android/platform-tools/adb devices"
          echo "  /mnt/android/platform-tools/adb install app.apk"
          echo "  /mnt/android/platform-tools/adb shell"
          echo ""
          echo "💡 Or set alias:"
          echo "  alias adb=/mnt/android/platform-tools/adb"
          echo ""

      - name: Keep Alive
        run: |
          DURATION=${{ github.event.inputs.duration || '6' }}
          SECONDS=$((DURATION * 3600))
          for ((i=0; i<$((SECONDS/300)); i++)); do
            sleep 300
            echo "[$((i*5)) min] Android AVD Active ✅"
          done

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emulator-logs
          path: /tmp/emulator.log
          retention-days: 7
