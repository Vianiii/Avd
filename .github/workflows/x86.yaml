name: android-x86-max-specs

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Session hours (max 6)'
        required: false
        default: '6'

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          sudo chmod 666 /dev/kvm
          
          echo "CPU Info:"
          lscpu | grep -E "Model name|CPU(s)|Thread|Core"
          
          echo "RAM Info:"
          free -h
      
      - name: Free Maximum Space
        run: |
          echo "Before cleanup:"
          df -h
          
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /opt/hostedtoolcache
          sudo docker image prune --all --force
          sudo apt-get clean
          
          echo "After cleanup:"
          df -h
      
      - name: Setup Android-x86
        run: |
          echo "üì• Downloading Android-x86 (pre-rooted)..."
          wget -q "https://sourceforge.net/projects/android-x86/files/Release%209.0/android-x86_64-9.0-r2.iso/download" -O android-x86.iso || \
          wget -q "https://osdn.net/projects/android-x86/downloads/69704/android-x86_64-9.0-r2.iso" -O android-x86.iso
          
          ls -lh android-x86.iso
          
          sudo apt-get update -qq
          sudo apt-get install -y qemu-kvm qemu-system-x86 qemu-utils
          
          # Create 20GB disk (max reasonable)
          qemu-img create -f qcow2 android-disk.qcow2 20G
          echo "‚úÖ 20GB disk created"
      
      - name: Install FRP
        run: |
          wget -q https://github.com/fatedier/frp/releases/download/v0.58.1/frp_0.58.1_linux_amd64.tar.gz
          tar -xzf frp_0.58.1_linux_amd64.tar.gz
          sudo cp frp_0.58.1_linux_amd64/frpc /usr/local/bin/
          
          cat > frpc.toml << 'EOF'
          serverAddr = "159.195.6.61"
          serverPort = 7000
          transport.protocol = "kcp"
          [[proxies]]
          name = "adb"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5555
          remotePort = 5555
          EOF
          
          nohup frpc -c frpc.toml > frpc.log 2>&1 &
          sleep 3
          pgrep frpc && echo "‚úÖ FRP running"
      
      - name: Run Android-x86 MAX SPECS
        run: |
          echo ""
          echo "========================================="
          echo "üöÄ Starting Android-x86 with MAX SPECS"
          echo "========================================="
          echo ""
          
          # GitHub Actions runners have:
          # - 4 CPU cores
          # - 16GB RAM
          # - ~14GB free disk
          
          sudo qemu-system-x86_64 \
            -enable-kvm \
            -m 12288 \
            -smp 4 \
            -cpu host,+x2apic,+avx,+avx2 \
            -device virtio-net-pci,netdev=net0 \
            -netdev user,id=net0,hostfwd=tcp::5555-:5555 \
            -cdrom android-x86.iso \
            -drive file=android-disk.qcow2,if=virtio,cache=writeback \
            -boot d \
            -vga virtio \
            -device virtio-mouse-pci \
            -device virtio-keyboard-pci \
            -device AC97 \
            -display none \
            -no-reboot &
          
          echo "‚è≥ Booting Android-x86..."
          sleep 120
          
          echo "üì± Connecting ADB..."
          adb connect 127.0.0.1:5555
          sleep 10
          
          adb devices
          
          echo ""
          echo "========================================="
          echo "‚úÖ Android-x86 Running (MAX SPECS)"
          echo ""
          echo "üíæ RAM: 12GB (max for GitHub Actions)"
          echo "‚öôÔ∏è  CPU: 4 cores (all available)"
          echo "üíø Disk: 20GB virtual disk"
          echo "üîì Root: Pre-installed (no setup needed)"
          echo ""
          echo "üì± Connect: adb connect 159.195.6.61:5555"
          echo "üéÆ Install GG: adb install GameGuardian.apk"
          echo "========================================="
          echo ""
          
          # Monitor and keep alive
          HOURS=${{ inputs.duration }}
          SECS=$((3600 * HOURS))
          START=$(date +%s)
          
          ITER=0
          while true; do
            NOW=$(date +%s)
            ELAPSED=$((NOW - START))
            [ $ELAPSED -ge $SECS ] && break
            
            REMAIN=$((SECS - ELAPSED))
            H=$((REMAIN / 3600))
            M=$(((REMAIN % 3600) / 60))
            
            ITER=$((ITER + 1))
            if [ $((ITER % 300)) -eq 0 ]; then
              echo "[$(date '+%H:%M:%S')] ${H}h ${M}m left"
              adb devices | grep -q "5555.*device" && echo "  ‚úÖ ADB connected" || echo "  ‚ö†Ô∏è  ADB disconnected"
            fi
            
            sleep 1
          done
          
          echo "‚úÖ Session complete"
      
      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ github.run_number }}
          path: frpc.log
          retention-days: 7
