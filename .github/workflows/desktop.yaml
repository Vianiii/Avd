name: cloud-desktop-ubuntu-novnc-prod

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Duration in hours'
        required: true
        default: '6'

jobs:
  desktop:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Desktop, VNC, noVNC
        run: |
          echo "Installing system packages..."
          sudo apt-get update
          sudo apt-get install -y xfce4 xfce4-goodies tightvncserver wget git python3 python3-pip
          sudo apt-get install -y websockify x11vnc firefox
          
          # Setup VNC password
          VNC_PASS="cloud123"
          mkdir -p ~/.vnc
          echo "$VNC_PASS" | vncpasswd -f > ~/.vnc/passwd
          chmod 600 ~/.vnc/passwd
          
          echo "‚úÖ System packages installed"

      - name: Download noVNC
        run: |
          echo "Downloading noVNC..."
          cd ~
          git clone --depth 1 https://github.com/novnc/noVNC.git
          cd ~/noVNC
          git clone --depth 1 https://github.com/novnc/websockify.git utils/websockify
          
          # Test if python works
          python3 --version
          
          echo "‚úÖ noVNC downloaded"
          ls -la ~/noVNC/

      - name: Start Xvfb
        run: |
          echo "Starting virtual display..."
          Xvfb :1 -screen 0 1920x1080x24 > /tmp/xvfb.log 2>&1 &
          sleep 3
          
          ps aux | grep Xvfb | grep -v grep
          echo "‚úÖ Xvfb started"

      - name: Start XFCE
        run: |
          export DISPLAY=:1
          echo "Starting XFCE desktop..."
          startxfce4 > /tmp/xfce.log 2>&1 &
          sleep 5
          
          ps aux | grep xfce4-session | grep -v grep
          echo "‚úÖ XFCE started"

      - name: Start VNC Server
        run: |
          export DISPLAY=:1
          echo "Starting VNC server..."
          
          x11vnc -display :1 -rfbauth ~/.vnc/passwd -forever -shared -bg -nopw -rfbport 5901 2>&1 | head -20
          sleep 2
          
          ps aux | grep x11vnc | grep -v grep
          netstat -tln | grep 5901
          
          echo "‚úÖ VNC server ready"

      - name: Start noVNC WebSocket Proxy
        run: |
          echo "Starting noVNC websocket proxy..."
          cd ~/noVNC
          
          # Make sure utils/novnc_proxy is executable
          chmod +x utils/novnc_proxy
          
          # Start noVNC with full output
          nohup python3 utils/novnc_proxy \
            --vnc 127.0.0.1:5901 \
            --listen 6080 \
            --web ./ > /tmp/novnc.log 2>&1 &
          
          sleep 5
          
          # Check if it started
          ps aux | grep novnc_proxy | grep -v grep || echo "‚ö†Ô∏è Checking logs..."
          
          netstat -tln | grep 6080
          
          echo "noVNC logs:"
          tail -20 /tmp/novnc.log
          
          echo "‚úÖ noVNC started"

      - name: Setup FRP Tunnel
        run: |
          echo "Setting up FRP tunnel..."
          
          wget -q https://github.com/fatedier/frp/releases/download/v0.58.1/frp_0.58.1_linux_amd64.tar.gz
          tar -xzf frp_0.58.1_linux_amd64.tar.gz
          
          cat > frpc.toml << 'EOF'
          serverAddr = "159.195.6.61"
          serverPort = 7000
          transport.protocol = "kcp"
          
          [[proxies]]
          name = "novnc-production"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 6080
          remotePort = 6080
          EOF
          
          # Start FRP client
          nohup ./frp_0.58.1_linux_amd64/frpc -c frpc.toml > frpc.log 2>&1 &
          sleep 3
          
          ps aux | grep frpc | grep -v grep
          
          echo ""
          echo "=========================================="
          echo "‚úÖ CLOUD DESKTOP ACTIVE"
          echo "=========================================="
          echo ""
          echo "üì± Access at:"
          echo "   http://159.195.6.61:6080/vnc.html"
          echo ""
          echo "üîê Password: cloud123"
          echo ""
          echo "=========================================="

      - name: Verify All Services
        run: |
          sleep 5
          
          echo "Service Status:"
          echo "1. Xvfb:" && ps aux | grep Xvfb | grep -v grep || echo "‚ùå"
          echo "2. VNC:" && ps aux | grep x11vnc | grep -v grep || echo "‚ùå"
          echo "3. noVNC:" && ps aux | grep novnc_proxy | grep -v grep || echo "‚ùå"
          echo "4. FRP:" && ps aux | grep frpc | grep -v grep || echo "‚ùå"
          
          echo ""
          echo "Ports:"
          netstat -tln | grep -E "5901|6080"

      - name: Keep Alive
        run: |
          DURATION=${{ github.event.inputs.duration || '6' }}
          SECONDS=$((DURATION * 3600))
          echo "Running for $DURATION hours..."
          sleep $SECONDS

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: desktop-logs
          path: |
            /tmp/xvfb.log
            /tmp/xfce.log
            /tmp/vnc.log
            /tmp/novnc.log
            frpc.log
          retention-days: 7
