name: avd-rooted-complete-working

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Session duration in hours (max 6)'
        required: false
        default: '6'

jobs:
  run-emulator:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check Space & Enable KVM
        run: |
          echo "📊 Initial Space:"
          df -h / | tail -1
          df -h /mnt | tail -1
          
          echo ""
          echo "Enabling KVM..."
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules > /dev/null
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          sudo chmod 666 /dev/kvm
          sudo usermod -a -G kvm runner
          echo "✅ KVM enabled"

      - name: Set up Java & Android SDK (Official)
        uses: android-actions/setup-android@v3
        with:
          api-level: 30
          channels: canary
          cache: true

      - name: Install FRP
        run: |
          wget -q https://github.com/fatedier/frp/releases/download/v0.58.1/frp_0.58.1_linux_amd64.tar.gz
          tar -xzf frp_0.58.1_linux_amd64.tar.gz
          sudo cp frp_0.58.1_linux_amd64/frpc /usr/local/bin/
          sudo chmod +x /usr/local/bin/frpc
          rm -rf frp_0.58.1_linux_amd64*
          echo "✅ FRP installed"

      - name: Create FRP Config
        run: |
          cat > frpc.toml << 'EOF'
          serverAddr = "159.195.6.61"
          serverPort = 7000
          transport.protocol = "kcp"
          
          [[proxies]]
          name = "github-avd-adb"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5555
          remotePort = 5555
          EOF
          echo "✅ FRP config created"

      - name: Start FRP Tunnel
        run: |
          nohup frpc -c frpc.toml > frpc.log 2>&1 &
          sleep 5
          pgrep -x "frpc" > /dev/null && echo "✅ FRP tunnel running" || echo "❌ FRP failed"

      - name: Start Emulator & Run Session
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: pixel_6_pro
          ram-size: 6144M
          heap-size: 1024M
          disk-size: 61440M
          emulator-options: -no-window -gpu on -memory 6144 -cores 4 -writable-system
          disable-animations: true
          script: |
            echo "========================================="
            echo "   🚀 ROOTED ANDROID 11 - READY!"
            echo "   💪 MAXIMUM PERFORMANCE"
            echo "========================================="
            echo ""
            
            # Enable root access
            adb root
            adb wait-for-device
            adb remount
            
            # Enable TCP/IP for remote connection
            adb tcpip 5555
            sleep 3
            adb connect 127.0.0.1:5555
            sleep 2
            
            echo ""
            echo "========================================="
            echo "   📱 DEVICE INFO"
            echo "========================================="
            
            echo "Android Version:"
            adb shell getprop ro.build.version.release
            
            echo ""
            echo "Build Details:"
            adb shell getprop ro.build.version.sdk
            
            echo ""
            echo "Root Status:"
            adb shell "id"
            
            echo ""
            echo "Storage:"
            adb shell df -h /data | head -2
            
            echo ""
            echo "RAM:"
            adb shell cat /proc/meminfo | head -1
            
            echo ""
            echo "========================================="
            echo "   🌐 REMOTE CONNECTION"
            echo "========================================="
            echo ""
            echo "📱 VPS Address: 159.195.6.61:5555"
            echo "💻 Command: adb connect 159.195.6.61:5555"
            echo "🔓 Root: YES (adb root already enabled)"
            echo "📝 System: WRITABLE (adb remount done)"
            echo ""
            echo "========================================="
            echo "   ⏱️  SESSION TIMER"
            echo "========================================="
            echo ""
            
            # Session timing
            DURATION=${{ github.event.inputs.duration || '6' }}
            DURATION_SEC=$((DURATION * 3600))
            START_TIME=$(date +%s)
            
            ITERATION=0
            while true; do
              CURRENT_TIME=$(date +%s)
              ELAPSED=$((CURRENT_TIME - START_TIME))
              
              if [ $ELAPSED -ge $DURATION_SEC ]; then
                echo "✅ Session completed successfully"
                break
              fi
              
              REMAINING=$((DURATION_SEC - ELAPSED))
              HOURS=$((REMAINING / 3600))
              MINUTES=$(((REMAINING % 3600) / 60))
              SECONDS=$((REMAINING % 60))
              
              ITERATION=$((ITERATION + 1))
              
              # Print status every minute
              if [ $((ITERATION % 60)) -eq 0 ]; then
                CONNECTED=$(adb devices | grep -c "device$" || echo "0")
                TCP_CONNECTED=$(adb devices | grep -c "5555" || echo "0")
                
                echo "[$(date '+%H:%M:%S')] ⏳ ${HOURS}h ${MINUTES}m ${SECONDS}s | 📱 USB: $CONNECTED | 🌐 TCP: $TCP_CONNECTED"
              fi
              
              sleep 1
            done

      - name: Save Logs
        if: always()
        run: |
          mkdir -p logs
          cp frpc.log logs/ 2>/dev/null || true
          cp frpc.toml logs/ 2>/dev/null || true
          echo "$(date)" >> logs/session.log

      - name: Upload Logs & Config
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: avd-session-logs
          path: logs/
          retention-days: 7
